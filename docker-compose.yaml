version: '3.8'
networks:
  social-network:
    name: social-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/16
          ip_range: 10.10.0.0/24
          gateway: 10.10.0.1
          aux_addresses:
            mongo1: 10.10.0.2
            mongo2: 10.10.0.3
            redis: 10.10.0.4
            postgres: 10.10.0.5
            mongo-init: 10.10.0.6
            minio: 10.10.0.7
            kafka: 10.10.0.8
            zookeeper: 10.10.0.9

volumes:
  minio-storage:
    external: true

services:
#  postgres:
#    container_name: sn-postgres
#    image: postgres:12-alpine
#    mem_limit: 1024m
#    restart: always
#    networks:
#      - social-network
#    environment:
#      - POSTGRES_USER=user
#      - POSTGRES_PASSWORD=user
#      - POSTGRES_DB=social_networks
#    ports:
#      - 15432:5432
#    volumes:
#      - ./tmp/postgres_data:/var/lib/postgresql/data
#
#  redis:
#    container_name: sn-redis
#    image: redis:6.2-alpine
#    mem_limit: 256m
#    networks:
#      - social-network
#    restart: always
#    ports:
#      - 16379:6379
#    command: redis-manager
#    volumes:
#      - ./tmp/redis_data:/data

  mongo1:
    container_name: sn-mongo1
    image: mongo
    mem_limit: 1024m
    volumes:
      - ./tmp/mongo/1:/data/db
      - ./scripts/mongo/config.conf:/etc/mongo/mongo.conf
    networks:
      - social-network
    ports:
      - 17017:17017
    restart: always
    entrypoint:
      - /usr/bin/mongod
      - -f/etc/mongo/mongo.conf
#      - --replSet
#      - sn
#      - --keyFile
#      - /data/file.key
      - --port
      - '17017'

  mongo2:
    container_name: sn-mongo2
    image: mongo
    mem_limit: 1024m
    volumes:
      - ./tmp/mongo/2:/data/db
      - ./scripts/mongo/config.conf:/etc/mongo/mongo.conf
    networks:
      - social-network
    ports:
      - 17018:17018
    restart: always
    entrypoint:
      - /usr/bin/mongod
      - -f/etc/mongo/mongo.conf
      - --port
      - '17018'

  # todo fixed rs creation script
#  mongo-init:
#    container_name: sn-mongo-init
#    image: mongo:4.4
#    mem_limit: 256m
#    volumes:
#      - ./scripts/mongo/rs-init.sh:/scripts/rs-init.sh
#    command:
#      - /scripts/rs-init.sh
#    networks:
#      - social-network
#    depends_on:
#      - mongo1
#      - mongo2
#    links:
#      - mongo1
#      - mongo2

#  # todo add script volume creation
#  minio:
#    container_name: sn-minio
#    image: docker.io/bitnami/minio:2022
#    mem_limit: 512m
#    networks:
#      - social-network
#    environment:
#      - MINIO_ROOT_USER=sn-minio
#      - MINIO_ROOT_PASSWORD=sn-minio-pass
#    ports:
#      - 9000:9000
#      - 9001:9001
#    volumes:
#      - minio-storage:/data
#    restart: always
#
#  zookeeper:
#    container_name: sn-zookeeper
#    image: bitnami/zookeeper:latest
#    mem_limit: 256m
#    networks:
#      - social-network
#    ports:
#      - 12181:2181
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    volumes:
#      - ./tmp/zookeeper:/bitnami/zookeeper
#
#  kafka:
#    container_name: sn-kafka
#    image: bitnami/kafka:2.5.0
#    mem_limit: 512m
#    networks:
#      - social-network
#    ports:
#      - 19092:9092
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.10.0.1:19092
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    depends_on:
#      - zookeeper
#    volumes:
#      - ./tmp/kafka:/bitnami/kafka


#docker volume create --driver local --opt type=none --opt device=/home/artash/go/src/github.com/yartash/social-network/tmp/minio --opt o=bind minio-storage
